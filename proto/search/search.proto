syntax = "proto3";
package search;

service SearchService {
  rpc Query(SearchRequest) returns(SearchResponse) {}
}

message SearchRequest {
  string index_name = 1;
  Params params = 2;
  int32 count = 3;
}

message Params {
  repeated Param params = 1;
  CombineWith combine_with = 2;
}

enum CombineWith {
  COMBINE_WITH_INVALID = 0; COMBINE_WITH_MUST = 1; COMBINE_WITH_SHOULD = 2;
  COMBINE_WITH_DISMAX = 3;
}

message Param {
  message QueryParam {
    repeated string fields = 1;
    string query = 2;
  }
  message FilterParam {
    string field = 1;
    string string_filter = 2;
  }
  message VectorParam {
    string field = 1;
    repeated double vector_field = 2;
    double min_score = 3;
  }
  message RangeParam {
    message IntegerBound {
      int64 lower_bound = 1;
      int64 upper_bound = 2;
    }
    message DoubleBound {
      double lower_bound = 1;
      double upper_bound = 2;
    }
    message Bound {
      oneof type {
        IntegerBound int_bound = 1;
        DoubleBound double_bound = 2;
      }
    }
    string field = 1;
    Bound bound = 2;
  }
  oneof type {
    QueryParam query_param = 1;
    FilterParam filter_param = 2;
    VectorParam vector_param = 3;
    Params composed_param = 4;
    RangeParam range_param = 5;
  }
}

message SearchResponse {
  message Hit {
    message Meta { double score = 1; }
    string id = 1;
    Meta meta = 2;
  }
  repeated Hit hits = 1;
}
